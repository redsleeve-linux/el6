From 1ac087a405c11d27b1150b27d9f075b456000c50 Mon Sep 17 00:00:00 2001
From: Noriko Hosoi <nhosoi@totoro.usersys.redhat.com>
Date: Wed, 24 Oct 2012 16:13:32 -0700
Subject: [PATCH 07/10] Fixing compiler warnings in the posix-winsync plugin

The commit b9eeb2e1a8e688dfec753e8965d0e5aeb119e638 for Ticket #481
"expand nested posix groups" introduced these compiler warnings.

1) posix-grou-func.c
. added missing format strings "%s" in searchUid.
. added a function declaration hasObjectClass.
. eliminated an unused variable uid_dn_value.
2) posix-group-task.c
. included "slapi-private.h" for filter_escaped_value.
(cherry picked from commit 56ebbb20fa9f8d1add75075fdf421f53ed5348f1)
---
 .../plugins/posix-winsync/posix-group-func.c       |    9 +++++----
 .../plugins/posix-winsync/posix-group-func.h       |    2 ++
 .../plugins/posix-winsync/posix-group-task.c       |    1 +
 3 files changed, 8 insertions(+), 4 deletions(-)

diff --git a/ldap/servers/plugins/posix-winsync/posix-group-func.c b/ldap/servers/plugins/posix-winsync/posix-group-func.c
index be3a6ec..9ad636f 100644
--- a/ldap/servers/plugins/posix-winsync/posix-group-func.c
+++ b/ldap/servers/plugins/posix-winsync/posix-group-func.c
@@ -28,6 +28,8 @@
 
 Slapi_Value **
 valueset_get_valuearray(const Slapi_ValueSet *vs); /* stolen from proto-slap.h */
+static int hasObjectClass(Slapi_Entry *entry, const char *objectClass);
+
 static PRMonitor *memberuid_operation_lock = 0;
 
 void
@@ -133,13 +135,13 @@ searchUid(const char *udn)
         }
 
         slapi_log_error(SLAPI_LOG_PLUGIN, POSIX_WINSYNC_PLUGIN_NAME,
-                        "searchUid: About to free entry\n", udn);
+                        "searchUid: About to free entry (%s)\n", udn);
         
         slapi_entry_free(entry);
     }
 
     slapi_log_error(SLAPI_LOG_PLUGIN, POSIX_WINSYNC_PLUGIN_NAME,
-                    "searchUid: <==\n", udn);
+                    "searchUid(%s): <==\n", udn);
         
     return uid;
 }
@@ -260,7 +262,7 @@ smods_has_mod(Slapi_Mods *smods, int modtype, const char *type, const char *val)
     return rc;
 }
 
-int
+static int
 hasObjectClass(Slapi_Entry *entry, const char *objectClass)
 {
     int rc = 0;
@@ -704,7 +706,6 @@ modGroupMembership(Slapi_Entry *entry, Slapi_Mods *smods, int *do_modify)
 
             if (smod_deluids == NULL) { /* deletion of the last value, deletes the Attribut from entry complete, this operation has no value, so we must look by self */
                 Slapi_Attr * um_attr = NULL; /* Entry attributes        */
-                Slapi_Value * uid_dn_value = NULL; /* Attribute values        */
                 int rc = slapi_entry_attr_find(entry, "uniquemember", &um_attr);
                 
                 if (rc != 0 || um_attr == NULL) {
diff --git a/ldap/servers/plugins/posix-winsync/posix-group-func.h b/ldap/servers/plugins/posix-winsync/posix-group-func.h
index 9452022..0f0ae37 100644
--- a/ldap/servers/plugins/posix-winsync/posix-group-func.h
+++ b/ldap/servers/plugins/posix-winsync/posix-group-func.h
@@ -17,5 +17,7 @@ char * searchUid(const char *udn);
 void memberUidLock();
 void memberUidUnlock();
 int memberUidLockInit();
+int addUserToGroupMembership(Slapi_Entry *entry);
+void propogateDeletionsUpward(Slapi_Entry *, const Slapi_DN *, Slapi_ValueSet*, Slapi_ValueSet *, int);
 
 #endif
diff --git a/ldap/servers/plugins/posix-winsync/posix-group-task.c b/ldap/servers/plugins/posix-winsync/posix-group-task.c
index e5385b0..92ac342 100644
--- a/ldap/servers/plugins/posix-winsync/posix-group-task.c
+++ b/ldap/servers/plugins/posix-winsync/posix-group-task.c
@@ -1,4 +1,5 @@
 #include "slapi-plugin.h"
+#include "slapi-private.h"
 #include "nspr.h"
 
 #include "posix-wsp-ident.h"
-- 
1.7.1


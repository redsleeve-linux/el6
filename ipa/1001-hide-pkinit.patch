From 3b5ca7624734863269ccb1a53bb3700f59502a31 Mon Sep 17 00:00:00 2001
From: Rob Crittenden <rcritten@redhat.com>
Date: Thu, 30 Aug 2012 10:45:50 -0400
Subject: [PATCH] Hide pkinit functionality from production version

https://fedorahosted.org/freeipa/ticket/616

Re-based from original patch from Jan Zeleny
---
 install/tools/ipa-replica-install |  8 +++-----
 install/tools/ipa-replica-prepare | 11 +++++------
 install/tools/ipa-server-install  | 13 ++++---------
 3 files changed, 12 insertions(+), 20 deletions(-)

diff --git a/install/tools/ipa-replica-install b/install/tools/ipa-replica-install
index 4fe387f3cb5cd00e45d93a9c8eef0e3d5a3706e4..21f2ad1a3b8edcf6e27ee6be27aed017e906c447 100755
--- a/install/tools/ipa-replica-install
+++ b/install/tools/ipa-replica-install
@@ -87,11 +87,6 @@ def parse_options():
                       default=False, help="unattended installation never prompts the user")
     parser.add_option_group(basic_group)
 
-    cert_group = OptionGroup(parser, "certificate system options")
-    cert_group.add_option("--no-pkinit", dest="setup_pkinit", action="store_false",
-                      default=True, help="disables pkinit setup steps")
-    parser.add_option_group(cert_group)
-
     dns_group = OptionGroup(parser, "DNS options")
     dns_group.add_option("--setup-dns", dest="setup_dns", action="store_true",
                       default=False, help="configure bind with our zone")
@@ -112,6 +107,9 @@ def parse_options():
     options, args = parser.parse_args()
     safe_options = parser.get_safe_opts(options)
 
+    # pkinit is disabled in production version
+    options.setup_pkinit = False
+
     if len(args) != 1:
         parser.error("you must provide a file generated by ipa-replica-prepare")
 
diff --git a/install/tools/ipa-replica-prepare b/install/tools/ipa-replica-prepare
index 16dceaa16a80b0de8e4d8e02082f61c7c3c136ed..03e9c97559567362c339ed6c6921e9e7f69dcdac 100755
--- a/install/tools/ipa-replica-prepare
+++ b/install/tools/ipa-replica-prepare
@@ -47,14 +47,10 @@ def parse_options():
                       help="install certificate for the directory server")
     parser.add_option("--http_pkcs12", dest="http_pkcs12",
                       help="install certificate for the http server")
-    parser.add_option("--pkinit_pkcs12", dest="pkinit_pkcs12",
-                      help="install certificate for the KDC")
     parser.add_option("--dirsrv_pin", dest="dirsrv_pin",
                       help="PIN for the Directory Server PKCS#12 file")
     parser.add_option("--http_pin", dest="http_pin",
                       help="PIN for the Apache Server PKCS#12 file")
-    parser.add_option("--pkinit_pin", dest="pkinit_pin",
-                      help="PIN for the KDC pkinit PKCS#12 file")
     parser.add_option("-p", "--password", dest="password",
                       help="Directory Manager (existing master) password")
     parser.add_option("--ip-address", dest="ip_address",
@@ -65,13 +61,16 @@ def parse_options():
                       default=False, help="Do not create reverse DNS zone")
     parser.add_option("--ca", dest="ca_file", default="/root/cacert.p12",
                       help="Location of CA PKCS#12 file, default /root/cacert.p12")
-    parser.add_option("--no-pkinit", dest="setup_pkinit", action="store_false",
-                      default=True, help="disables pkinit setup steps")
     parser.add_option("--debug", dest="debug", action="store_true",
                       default=False, help="enable debugging")
 
     options, args = parser.parse_args()
 
+    # pkinit is disabled in production version
+    options.setup_pkinit = False
+    options.pkinit_pin = False
+    options.pkinit_pkcs12 = False
+
     if not options.ip_address:
         if options.reverse_zone:
             parser.error("You cannot specify a --reverse-zone option without the --ip-address option")
diff --git a/install/tools/ipa-server-install b/install/tools/ipa-server-install
index 924285927e6995244f14d5456baeeefc35167a3a..926781a3fbac0115c3611ed01b004766e2406c9d 100755
--- a/install/tools/ipa-server-install
+++ b/install/tools/ipa-server-install
@@ -164,20 +164,14 @@ def parse_options():
                       help="File containing PKCS#10 certificate")
     cert_group.add_option("", "--external_ca_file", dest="external_ca_file",
                       help="File containing PKCS#10 of the external CA chain")
-    cert_group.add_option("--no-pkinit", dest="setup_pkinit", action="store_false",
-                      default=True, help="disables pkinit setup steps")
     cert_group.add_option("--dirsrv_pkcs12", dest="dirsrv_pkcs12",
                       help="PKCS#12 file containing the Directory Server SSL certificate")
     cert_group.add_option("--http_pkcs12", dest="http_pkcs12",
                       help="PKCS#12 file containing the Apache Server SSL certificate")
-    cert_group.add_option("--pkinit_pkcs12", dest="pkinit_pkcs12",
-                      help="PKCS#12 file containing the Kerberos KDC SSL certificate")
     cert_group.add_option("--dirsrv_pin", dest="dirsrv_pin", sensitive=True,
                       help="The password of the Directory Server PKCS#12 file")
     cert_group.add_option("--http_pin", dest="http_pin", sensitive=True,
                       help="The password of the Apache Server PKCS#12 file")
-    cert_group.add_option("--pkinit_pin", dest="pkinit_pin",
-                      help="The password of the Kerberos KDC PKCS#12 file")
     cert_group.add_option("--subject", action="callback", callback=subject_callback,
                       type="string",
                       help="The certificate subject base (default O=<realm-name>)")
@@ -301,9 +295,10 @@ def parse_options():
         parser.error("idmax (%u) cannot be smaller than idstart (%u)" %
                     (options.idmax, options.idstart))
 
-    #Automatically disable pkinit w/ dogtag until that is supported
-    if not options.pkinit_pkcs12 and not options.selfsign:
-        options.setup_pkinit = False
+    # pkinit is disabled in production version
+    options.setup_pkinit = False
+    options.pkinit_pin = False
+    options.pkinit_pkcs12 = False
 
     if options.zone_refresh < 0:
         parser.error("negative numbers not allowed for --zone-refresh")
-- 
2.7.4


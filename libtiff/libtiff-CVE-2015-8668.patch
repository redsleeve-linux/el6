diff --git a/tools/bmp2tiff.c b/tools/bmp2tiff.c
index a204067..1124117 100644
--- a/tools/bmp2tiff.c
+++ b/tools/bmp2tiff.c
@@ -609,18 +609,39 @@ main(int argc, char* argv[])
 			    || info_hdr.iCompression == BMPC_RLE4 ) {
 			uint32		i, j, k, runlength;
 			uint32		compr_size, uncompr_size;
+            uint32      bits = 0;
 			unsigned char   *comprbuf;
 			unsigned char   *uncomprbuf;
 
+            bits = info_hdr.iBitCount;
+
 			compr_size = file_hdr.iSize - file_hdr.iOffBits;
-			uncompr_size = width * length;
-            /* Detect int overflow */
-            if( uncompr_size / width != length )
-            {
-                TIFFError(infilename,
-                    "Invalid dimensions of BMP file" );
-                close(fd);
-                return -1;
+			if (bits > 8) // bit depth is > 8bit, adjust size
+			{
+				uncompr_size = width * length * (bits / 8);
+				/* Detect int overflow */
+				if (uncompr_size / width / (bits / 8) != length)
+					TIFFError(infilename,
+							   "Invalid dimensions of BMP file");
+			}
+			else {
+			    uncompr_size = width * length;
+                /* Detect int overflow */
+                if ( uncompr_size / width != length ) {
+                    TIFFError(infilename,
+                            "Invalid dimensions of BMP file" );
+                    close(fd);
+                    return -1;
+                }
+            }
+            if ( (compr_size == 0) ||
+                (compr_size > ((uint32) ~0) >> 1) ||
+                (uncompr_size == 0) ||
+                (uncompr_size > ((uint32) ~0) >> 1) ) {
+                    TIFFError(infilename,
+                        "Invalid dimensions of BMP file" );
+                    close(fd);
+                    return -1;
             }
 			comprbuf = (unsigned char *) _TIFFmalloc( compr_size );
 			if (!comprbuf) {

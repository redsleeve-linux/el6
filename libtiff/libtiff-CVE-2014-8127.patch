From 446cc8401fd21c785746885a1f5828f15acaef46 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Nikola=20Forr=C3=B3?= <nforro@redhat.com>
Date: Wed, 20 Jul 2016 19:05:32 +0200
Subject: [PATCH] Fix CVE-2014-8127

---
 libtiff/tif_dirwrite.c |  6 ++++++
 tools/bmp2tiff.c       | 20 +++++++++++++++++++-
 tools/pal2rgb.c        |  3 ++-
 tools/thumbnail.c      |  5 +++--
 tools/tiff2bw.c        |  5 +++++
 5 files changed, 35 insertions(+), 4 deletions(-)

diff --git a/libtiff/tif_dirwrite.c b/libtiff/tif_dirwrite.c
index 8d308c4..0d8bf8e 100644
--- a/libtiff/tif_dirwrite.c
+++ b/libtiff/tif_dirwrite.c
@@ -975,6 +975,12 @@ static int
 TIFFWriteLongArray(TIFF* tif, TIFFDirEntry* dir, uint32* v)
 {
 	if (dir->tdir_count == 1) {
+       if (NULL == v)
+       {
+           TIFFErrorExt(tif->tif_clientdata, tif->tif_name,
+               "NULL pointer dereference");
+           return (0);
+       }
 		dir->tdir_offset = v[0];
 		return (1);
 	} else
diff --git a/tools/bmp2tiff.c b/tools/bmp2tiff.c
index 5e20a2e..d004f6a 100644
--- a/tools/bmp2tiff.c
+++ b/tools/bmp2tiff.c
@@ -397,7 +397,25 @@ main(int argc, char* argv[])
 		    return 0;
 		}
 
-		width = info_hdr.iWidth;
+        if (info_hdr.iCompression == BMPC_RLE4 && info_hdr.iBitCount != 4)
+        {
+            TIFFError(infilename,
+              "Cannot process BMP file with bit count %d and RLE 4-bit/pixel compression",
+              info_hdr.iBitCount);
+            close(fd);
+            return 0;
+        }
+        
+        if (info_hdr.iCompression == BMPC_RLE8 && info_hdr.iBitCount != 8)
+        {
+            TIFFError(infilename,
+              "Cannot process BMP file with bit count %d and RLE 8-bit/pixel compression",
+              info_hdr.iBitCount);
+            close(fd);
+            return 0;
+        }
+
+        width = info_hdr.iWidth;
 		length = (info_hdr.iHeight > 0) ? info_hdr.iHeight : -info_hdr.iHeight;
         if( width <= 0 || length <= 0 )
         {
diff --git a/tools/pal2rgb.c b/tools/pal2rgb.c
index ea5803f..e2be6b4 100644
--- a/tools/pal2rgb.c
+++ b/tools/pal2rgb.c
@@ -368,7 +368,8 @@ static struct cpTag {
     { TIFFTAG_CLEANFAXDATA,		1, TIFF_SHORT },
     { TIFFTAG_CONSECUTIVEBADFAXLINES,	1, TIFF_LONG },
     { TIFFTAG_INKSET,			1, TIFF_SHORT },
-    { TIFFTAG_INKNAMES,			1, TIFF_ASCII },
+    // disable INKNAMES tag, http://bugzilla.maptools.org/show_bug.cgi?id=2484 (CVE-2014-8127)
+    //{ TIFFTAG_INKNAMES,			1, TIFF_ASCII },
     { TIFFTAG_DOTRANGE,			2, TIFF_SHORT },
     { TIFFTAG_TARGETPRINTER,		1, TIFF_ASCII },
     { TIFFTAG_SAMPLEFORMAT,		1, TIFF_SHORT },
diff --git a/tools/thumbnail.c b/tools/thumbnail.c
index e9e51a3..98b3f57 100644
--- a/tools/thumbnail.c
+++ b/tools/thumbnail.c
@@ -237,7 +237,8 @@ static struct cpTag {
     { TIFFTAG_CLEANFAXDATA,		1, TIFF_SHORT },
     { TIFFTAG_CONSECUTIVEBADFAXLINES,	1, TIFF_LONG },
     { TIFFTAG_INKSET,			1, TIFF_SHORT },
-    { TIFFTAG_INKNAMES,			1, TIFF_ASCII },
+    // disable INKNAMES tag, http://bugzilla.maptools.org/show_bug.cgi?id=2484 (CVE-2014-8127)
+    //{ TIFFTAG_INKNAMES,			1, TIFF_ASCII },
     { TIFFTAG_DOTRANGE,			2, TIFF_SHORT },
     { TIFFTAG_TARGETPRINTER,		1, TIFF_ASCII },
     { TIFFTAG_SAMPLEFORMAT,		1, TIFF_SHORT },
@@ -565,7 +566,7 @@ generateThumbnail(TIFF* in, TIFF* out)
     rowsize = TIFFScanlineSize(in);
     rastersize = sh * rowsize;
     fprintf(stderr, "rastersize=%u\n", (unsigned int)rastersize);
-    raster = (unsigned char*)_TIFFmalloc(rastersize);
+    raster = (unsigned char*)_TIFFmalloc(rastersize + 3);
     if (!raster) {
 	    TIFFError(TIFFFileName(in),
 		      "Can't allocate space for raster buffer.");
diff --git a/tools/tiff2bw.c b/tools/tiff2bw.c
index dcaef04..4397cbf 100644
--- a/tools/tiff2bw.c
+++ b/tools/tiff2bw.c
@@ -167,6 +167,11 @@ main(int argc, char* argv[])
 		    argv[optind], samplesperpixel);
 		return (-1);
 	}
+	if( photometric == PHOTOMETRIC_RGB && samplesperpixel != 3) {
+		fprintf(stderr, "%s: Bad samples/pixel %u for PHOTOMETRIC_RGB.\n",
+		    argv[optind], samplesperpixel);
+		return (-1);
+	}
 	TIFFGetField(in, TIFFTAG_BITSPERSAMPLE, &bitspersample);
 	if (bitspersample != 8) {
 		fprintf(stderr,
-- 
2.7.4

